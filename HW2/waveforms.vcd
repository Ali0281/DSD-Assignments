$date
	Mon May 01 19:58:11 2023
$end
$version
	ModelSim Version 10.1d
$end
$timescale
	1ps
$end
$scope module TESTBENCH $end
$var reg 4 ! NUM1 [3:0] $end
$var reg 4 " NUM2 [3:0] $end
$var reg 1 # CIN $end
$var wire 1 $ SUM [3] $end
$var wire 1 % SUM [2] $end
$var wire 1 & SUM [1] $end
$var wire 1 ' SUM [0] $end
$var wire 1 ( COUT $end
$scope module rca $end
$var wire 1 ) NUM1 [3] $end
$var wire 1 * NUM1 [2] $end
$var wire 1 + NUM1 [1] $end
$var wire 1 , NUM1 [0] $end
$var wire 1 - NUM2 [3] $end
$var wire 1 . NUM2 [2] $end
$var wire 1 / NUM2 [1] $end
$var wire 1 0 NUM2 [0] $end
$var wire 1 1 CIN $end
$var wire 1 $ SUM [3] $end
$var wire 1 % SUM [2] $end
$var wire 1 & SUM [1] $end
$var wire 1 ' SUM [0] $end
$var wire 1 ( COUT $end
$var wire 1 2 C0 $end
$var wire 1 3 C1 $end
$var wire 1 4 C2 $end
$scope module fa1 $end
$var wire 1 , NUM1 $end
$var wire 1 0 NUM2 $end
$var wire 1 1 CIN $end
$var wire 1 2 COUT $end
$var wire 1 ' SUM $end
$var wire 1 5 SUM1 $end
$var wire 1 6 CARRY1 $end
$var wire 1 7 CARRY2 $end
$scope module HA1 $end
$var wire 1 , NUM1 $end
$var wire 1 0 NUM2 $end
$var reg 1 8 COUT $end
$var reg 1 9 SUM $end
$upscope $end
$scope module HA2 $end
$var wire 1 5 NUM1 $end
$var wire 1 1 NUM2 $end
$var reg 1 : COUT $end
$var reg 1 ; SUM $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 + NUM1 $end
$var wire 1 / NUM2 $end
$var wire 1 2 CIN $end
$var wire 1 3 COUT $end
$var wire 1 & SUM $end
$var wire 1 < SUM1 $end
$var wire 1 = CARRY1 $end
$var wire 1 > CARRY2 $end
$scope module HA1 $end
$var wire 1 + NUM1 $end
$var wire 1 / NUM2 $end
$var reg 1 ? COUT $end
$var reg 1 @ SUM $end
$upscope $end
$scope module HA2 $end
$var wire 1 < NUM1 $end
$var wire 1 2 NUM2 $end
$var reg 1 A COUT $end
$var reg 1 B SUM $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 * NUM1 $end
$var wire 1 . NUM2 $end
$var wire 1 3 CIN $end
$var wire 1 4 COUT $end
$var wire 1 % SUM $end
$var wire 1 C SUM1 $end
$var wire 1 D CARRY1 $end
$var wire 1 E CARRY2 $end
$scope module HA1 $end
$var wire 1 * NUM1 $end
$var wire 1 . NUM2 $end
$var reg 1 F COUT $end
$var reg 1 G SUM $end
$upscope $end
$scope module HA2 $end
$var wire 1 C NUM1 $end
$var wire 1 3 NUM2 $end
$var reg 1 H COUT $end
$var reg 1 I SUM $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 1 ) NUM1 $end
$var wire 1 - NUM2 $end
$var wire 1 4 CIN $end
$var wire 1 ( COUT $end
$var wire 1 $ SUM $end
$var wire 1 J SUM1 $end
$var wire 1 K CARRY1 $end
$var wire 1 L CARRY2 $end
$scope module HA1 $end
$var wire 1 ) NUM1 $end
$var wire 1 - NUM2 $end
$var reg 1 M COUT $end
$var reg 1 N SUM $end
$upscope $end
$scope module HA2 $end
$var wire 1 J NUM1 $end
$var wire 1 4 NUM2 $end
$var reg 1 O COUT $end
$var reg 1 P SUM $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx !
bx "
x#
x8
x9
x:
x;
x?
x@
xA
xB
xF
xG
xH
xI
xM
xN
xO
xP
x'
x&
x%
x$
x(
x2
x3
x4
x5
x6
x7
x<
x=
x>
xC
xD
xE
xJ
xK
xL
x1
x0
x/
x.
x-
x,
x+
x*
x)
$end
#10
b1001 !
b110 "
1#
00
1/
1.
0-
1,
0+
0*
1)
11
#12
0:
0M
0F
0?
08
07
0K
0D
0=
06
02
#13
0;
1N
1G
1@
19
0'
1J
1C
1<
15
#14
0A
0>
03
#15
1B
1:
0H
0O
1&
17
0E
0L
0(
12
04
#16
1I
1P
1%
1$
#17
1A
1>
13
#18
0B
0&
#19
1H
1E
14
#20
0I
0%
#21
1O
1L
1(
#22
0P
0$
